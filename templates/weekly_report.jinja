{% extends "base.jinja" %}

{% block title %}{{ year }} NFL Week {{ week }} Fantasy Report{% endblock %}

{% block content %}
<h1>{{ year }} NFL Week {{ week }}</h1>

<!-- Box Score Section -->
<div class="section">
    <div class="section-title">Box Score</div>
    <hr>
    <div class="box-score">
        <div class="box-score-header">
            <div>Away</div>
            <div>Home</div>
        </div>

        {% for matchup in matchups %}
        <div class="matchup-row">
            <div class="team-section {% if matchup.winner == 'away' %}winner-bg{% elif matchup.winner == 'home' %}loser-bg{% endif %}">
                <div class="team-main-score">
                    <span class="team-name"><span class="logo-container"><img class='logo' src='{{ matchup.away_team.logo }}' /> </span> {{ matchup.away_team.abbrev }}</span>
                    <span class="team-score">{{ matchup.away_team.score|format_score }}</span>
                </div>
                <div class="team-sub-scores">
                    <div class="sub-score-row">
                        <span class="sub-score-label">MAX:</span>
                        <span class="sub-score-value">
                            {{ matchup.away_team.max_score|format_score }}
                            {% if matchup.winner == 'home' and matchup.lost_could_win %} <strong class="dead">ðŸ’€</strong>{% endif %}
                        </span>
                    </div>
                    <div class="sub-score-row">
                        <span class="sub-score-label">BEN:</span>
                        <span class="sub-score-value">
                            {{ matchup.away_team.bench|format_score }}
                            {% if matchup.away_team.bench_outscored %} <span class="clown">ðŸ¤¡</span>{% endif %}
                        </span>
                    </div>
                </div>
            </div>

            <div class="vs-symbol">vs</div>

            <div class="team-section {% if matchup.winner == 'home' %}winner-bg{% elif matchup.winner == 'away' %}loser-bg{% endif %}">
                <div class="team-main-score">
                    <span class="team-name"><span class="logo-container"><img class='logo' src='{{ matchup.home_team.logo }}' /></span> {{ matchup.home_team.abbrev }}</span>
                    <span class="team-score">{{ matchup.home_team.score|format_score }}</span>
                </div>
                <div class="team-sub-scores">
                    <div class="sub-score-row">
                        <span class="sub-score-label">MAX:</span>
                        <span class="sub-score-value">
                            {{ matchup.home_team.max_score|format_score }}
                            {% if matchup.winner == 'away' and matchup.lost_could_win %} <strong class="dead">ðŸ’€</strong>{% endif %}
                        </span>
                    </div>
                    <div class="sub-score-row">
                        <span class="sub-score-label">BEN:</span>
                        <span class="sub-score-value">
                            {{ matchup.home_team.bench|format_score }}
                            {% if matchup.home_team.bench_outscored %} <span class="clown">ðŸ¤¡</span>{% endif %}
                        </span>
                    </div>
                </div>
            </div>
        </div>
        {% endfor %}

        <div class="legend">
            <div>ðŸ¤¡ = <em>Team's bench outscored starters</em></div>
            <div>ðŸ’€ = <em>Team that lost could have won</em></div>
            <div><em>MAX = Maximum possible score</em></div>
            <div><em>BEN = Total points left on the bench</em></div>
        </div>
    </div>
</div>

<!-- League Standings Section -->
<div class="section">
    <div class="section-title">League Standings</div>
    <hr>
    <table class="data-table">
        <thead>
            <tr>
                <th>Rank</th>
                <th>Record</th>
                <th>Div</th>
                <th>Team</th>
                <th class="text-right">PF</th>
                <th class="text-right">PA</th>
            </tr>
        </thead>
        <tbody>
            {% for team in standings %}
            <tr>
                <td>{{ loop.index }}</td>
                <td>{{ team.wins }} - {{ team.losses }}</td>
                <td><em>{{ div_images[team.division_name[:1]]|safe }}</em></td>
                <td>{{ team.team_name }}</td>
                <td class="text-right">{{ team.points_for|format_score }}</td>
                <td class="text-right">{{ team.points_against|format_score }}</td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
    <div class="legend">
        <div><em>{{ div_images['F']|safe }} = Fireball division</em></div>
        <div><em>{{ div_images['J']|safe }} = Jager division</em></div>
    </div>
</div>

<!-- Power Rankings Section -->
<div class="section">
    <div class="section-title">Power Rankings</div>
    <hr>
    <table class="data-table">
        <thead>
            <tr>
                <th>Rank</th>
                <th>Score</th>
                <th>Div</th>
                <th>Team</th>
            </tr>
        </thead>
        <tbody>
            {% for rank in power_rankings %}
            <tr>
                <td>{{ loop.index }}</td>
                <td>{{ rank[0]|format_score }}</td>
                <td><em>{{ div_images[rank[1].division_name[:1]]|safe }}</em></td>
                <td>{{ rank[1].team_name }}</td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
    <div class="legend">
        <div><em>{{ div_images['F']|safe }} = Fireball division</em></div>
        <div><em>{{ div_images['J']|safe }} = Jager division</em></div>
        <div><em>Calculated using two step dominance, whatever that is. <a
                    href='https://github.com/cwendt94/espn-api/blob/master/espn_api/football/league.py#L230'
                    target='_new'>code</a></em></div>
    </div>
</div>

<!-- League Overview Section -->
<div class="section">
    <div class="section-title">League Overview</div>
    <hr>
    <table class="data-table">
        <thead>
            <tr>
                <th colspan=3>Week</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>Highest scoring week</td>
                <td>{{ top_week[0].team_name }}</td>
                <td>{{ top_week[1]|round(2) }}</td>
            </tr>
            <tr>
                <td>Lowest scoring week</td>
                <td>{{ low_week[0].team_name }}</td>
                <td>{{ low_week[1]|round(2) }}</td>
            </tr>
        </tbody>
        <thead>
            <tr>
                <th colspan=3>Season</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>Top Scorer</td>
                <td>{{ top_scorer.team_name }}</td>
                <td>{{ top_scorer.points_for|round(2) }}</td>
            </tr>
            <tr>
                <td>Low Scorer</td>
                <td>{{ low_scorer.team_name }}</td>
                <td>{{ low_scorer.points_for|round(2) }}</td>
            </tr>
            <tr>
                <td>Most Points Against</td>
                <td>{{ most_pa.team_name }}</td>
                <td>{{ most_pa.points_against|round(2) }}</td>
            </tr>
        </tbody>
    </table>

</div>

<!-- Weekly Scores Section -->
<div class="section">
    <div class="section-title">Weekly Scores</div>
    <hr>
    <table class="data-table">
        <thead>
            <tr>
                <th class="text-center">Rank</th>
                <th class="text-right">Score</th>
                <th class="text-center">Result</th>
                <th>Div</th>
                <th>Team</th>
            </tr>
        </thead>
        <tbody>
            {% for score in weekly_scores %}
            <tr>
                <td class="text-center">{{ loop.index }}</td>
                <td class="text-right">{{ score.score|format_score }}</td>
                <td class="text-center">
                    {% if score.won %}
                        <span class="result-win">W</span>
                    {% else %}
                        <span class="result-loss">L</span>
                    {% endif %}
                </td>
                <td>{{ div_images[score.division]|safe }}</td>
                <td>{{ score.name }}</td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
</div>

<!-- Weekly Max Scores Section -->
<div class="section">
    <div class="section-title">Weekly Max Scores</div>
    <hr>
    <table class="data-table">
        <thead>
            <tr>
                <th class="text-center">Rank</th>
                <th class="text-right">Max Score</th>
                <th class="text-center">Result</th>
                <th>Div</th>
                <th>Team</th>
            </tr>
        </thead>
        <tbody>
            {% for score in weekly_scores|sort(attribute='max_score', reverse=True) %}
            <tr>
                <td class="text-center">{{ loop.index }}</td>
                <td class="text-right">{{ score.max_score|format_score }}</td>
                <td class="text-center">
                    {% if score.won %}
                        <span class="result-win">W</span>
                    {% else %}
                        <span class="result-loss">L</span>
                    {% endif %}
                </td>
                <td>{{ div_images[score.division]|safe }}</td>
                <td>{{ score.name }}</td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
</div>

<!-- Weekly Bench Scores Section -->
<div class="section">
    <div class="section-title">Weekly Bench Scores</div>
    <hr>
    <table class="data-table">
        <thead>
            <tr>
                <th class="text-center">Rank</th>
                <th class="text-right">Score</th>
                <th class="text-center">Result</th>
                <th>Div</th>
                <th>Team</th>
            </tr>
        </thead>
        <tbody>
            {% for score in weekly_scores|sort(attribute='bench_score', reverse=True) %}
            <tr>
                <td class="text-center">{{ loop.index }}</td>
                <td class="text-right">{{ score.bench_score|format_score }}</td>
                <td class="text-center">
                    {% if score.won %}
                        <span class="result-win">W</span>
                    {% else %}
                        <span class="result-loss">L</span>
                    {% endif %}
                </td>
                <td>{{ div_images[score.division]|safe }}</td>
                <td>{{ score.name }}</td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
</div>

<!-- Points Breakdown Charts Section -->
<div class="section">
    <div class="section-title">Points Breakdown</div>
    <hr>
    <div style="width: 95%; margin: auto;">
        <canvas id="pointsPieChart"></canvas>
    </div>
    <div id="barChartContainer" style="display: none; margin-top: 20px;">
        <h3 id="barChartTitle" style="text-align: center;"></h3>
        <canvas id="pointsBarChart"></canvas>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    function transparentize(hexColor, alpha) {
        let color = hexColor.startsWith('#') ? hexColor.slice(1) : hexColor;
        if (color.length === 3) {
            color = color.split('').map(char => char + char).join('');
        }
        const r = parseInt(color.substring(0, 2), 16);
        const g = parseInt(color.substring(2, 4), 16);
        const b = parseInt(color.substring(4, 6), 16);
        const a = Math.max(0, Math.min(1, alpha));
        return `rgba(${r}, ${g}, ${b}, ${a})`;
    }

    document.addEventListener('DOMContentLoaded', function () {
        const groupedData = {{ grouped_points_breakdown|tojson }};
        const detailedData = {{ detailed_points_breakdown|tojson }};

        const pieCtx = document.getElementById('pointsPieChart');
        if (pieCtx) {
            const baseColors = [
                '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#7FDBDA', '#FF9F40',
                '#FFB3C1', '#A3D9B1', '#A52A2A', '#DEB887', '#5F9EA0', '#7FFF00'
//                '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#6AFCFF', '#FF9F40',
//                '#5F9EA0', '#A52A2A', '#FFE066', '#DEB887', '#41D3BD', '#7FFF00'
            ];
            const pieChart = new Chart(pieCtx.getContext('2d'), {
                type: 'doughnut',
                data: {
                    labels: Object.keys(groupedData),
                    datasets: [{
                        data: Object.values(groupedData),
                        backgroundColor: baseColors.map(color => transparentize(color, 0.6)),
                        borderColor: baseColors,
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top',
                            onClick: (e, legendItem, legend) => {
                                const index = legend.chart.data.labels.indexOf(legendItem.text);
                                const color = legend.chart.data.datasets[0].borderColor[index];
                                updateBarChart(legendItem.text, color);
                            }
                        },
                        title: {
                            display: true,
                            text: 'Aggregated Points by Category'
                        }
                    },
                    onClick: (evt, elements) => {
                        if (elements.length > 0) {
                            const clickedIndex = elements[0].index;
                            const clickedCategory = pieChart.data.labels[clickedIndex];
                            const color = pieChart.data.datasets[0].borderColor[clickedIndex];
                            updateBarChart(clickedCategory, color);
                        }
                    }
                }
            });
        }

        const barChartContainer = document.getElementById('barChartContainer');
        const barChartTitle = document.getElementById('barChartTitle');
        const barCtx = document.getElementById('pointsBarChart');
        let barChart;

        function updateBarChart(category, color) {
            const categoryData = detailedData.filter(d => d.category === category);

            categoryData.sort((a, b) => b.total_points - a.total_points);

            const labels = categoryData.map(d => d.label);
            const data = categoryData.map(d => d.total_points);

            barChartTitle.innerText = `Breakdown for ${category}`;
            barChartContainer.style.display = 'block';

            if (barChart) {
                barChart.destroy();
            }

            if (barCtx) {
                barChart = new Chart(barCtx.getContext('2d'), {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Points',
                            data: data,
                            backgroundColor: transparentize(color, 0.5),
                            borderColor: color,
                            borderWidth: 2,
                            borderRadius: 5,
                            borderSkipped: false,
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                display: false
                            }
                        }
                    }
                });
            }
        }
    });
</script>

<!-- Player Stats Section -->
<div class="section">
    <div class="section-title">Top 15 Player Scores</div>
    <hr>
    <table class="data-table">
        <thead>
            <tr>
                <th class="text-center">Rank</th>
                <th class="text-right">Score</th>
                <th>Pos.</th>
                <th>Player</th>
                <th>Team</th>
            </tr>
        </thead>
        <tbody>
            {% for player in top_overall_players %}
            <tr {% if player.slot_position == 'BE' %}class="bench-player"{% endif %}>
                <td class="text-center">{{ loop.index }}</td>
                <td class="text-right">{{ player.points|format_score }}</td>
                <td>{{ player.position }}</td>
                <td><img src="logo_svg/{{ player.pro_team }}.svg" class="nfl-logo" />{{ player.name }}</td>
                <td>
                    {% if player.slot_position == 'BE' %}
                        <span class="clown-large">ðŸ¤¡</span> {{ player.team_abbrev }}
                    {% elif player.team_abbrev == 'FA' %}
                       <span class="logo-container"><img class='logo' src='logo_svg/NFL.svg' /> </span> {{ player.team_abbrev }}
                    {% else %}
                        <span class="logo-container"><img class='logo' src='{{ player.team_logo }}' /> </span>{{ player.team_abbrev }}
                    {% endif %}
                </td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
</div>

<div class="section">
    <div class="section-title">Top 15 by Position</div>
    <hr>
    {% for position, players in top_players_by_position.items() %}
    <div class="sub-section">
        <div class="sub-section-title">{{ position }}</div>
        <table class="data-table">
            <thead>
                <tr>
                    <th class="text-center">Rank</th>
                    <th class="text-right">Score</th>
                    <th>Player</th>
                    <th>Team</th>
                </tr>
            </thead>
            <tbody>
                {% for player in players %}
                <tr {% if player.slot_position == 'BE' %}class="bench-player"{% endif %}>
                    <td class="text-center">{{ loop.index }}</td>
                    <td class="text-right">{{ player.points|format_score }}</td>
                    <td><img src="logo_svg/{{ player.pro_team }}.svg" class="nfl-logo" />{{ player.name }}</td>
                    <td>
                    {% if player.slot_position == 'BE' %}
                        <span class="clown-large">ðŸ¤¡</span> {{ player.team_abbrev }}
                    {% elif player.team_abbrev == 'FA' %}
                       <span class="logo-container"><img class='logo' src='logo_svg/NFL.svg' /> </span> {{ player.team_abbrev }}
                    {% else %}
                        <span class="logo-container"><img class='logo' src='{{ player.team_logo }}' /> </span>{{ player.team_abbrev }}
                    {% endif %}
                    </td>
                </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
    {% endfor %}
</div>

<!-- New Points Per Player Section -->
<div class="section points-per-player-section">
    <div class="section-title">Points Per Player Breakdown</div>
    <hr>
    {% for team_name, team_data in players_by_team.items() %}
    {% set sanitized_team_name = team_name | replace(' ', '_') | replace(',', '') | replace('(', '') | replace(')', '') | replace("'", '') | replace('&', '') | replace('.', '') | replace('/', '') | replace('-', '') %}
    <div class="team-header">
        {# Assuming team logo is available on one of the players #}
        <img class='logo' src='{{ team_data.players[0].team_logo }}' />
        <div class="team-header-text-content">
            <span>{{ team_name }}</span>
            {% if team_data.team_object %}
            <div class="team-details">
                <span class="team-record">{{ team_data.team_object.wins }}-{{ team_data.team_object.losses }}{% if team_data.team_object.ties %}-{{ team_data.team_object.ties }}{% endif %}</span>
                <span class="team-division">{{ div_images[team_data.team_object.division_name[:1]]|safe }} {{ team_data.team_object.division_name }}</span>
                <span class="team-points">PF: {{ team_data.team_object.points_for|round(2) }} PA: {{ team_data.team_object.points_against|round(2) }}</span>
                <span class="team-moves">Adds: {{ team_data.team_object.acquisitions }} Drops: {{ team_data.team_object.drops }} Trades: {{ team_data.team_object.trades }} IR: {{ team_data.team_object.move_to_ir }}</span>
                <span class="team-playoff-pct">Playoff %: {{ (team_data.team_object.playoff_pct)|round(2) }}%</span>
            </div>
            {% endif %}
        </div>
    </div>
    <hr>

    <div class="team-points-breakdown-charts">
        <div style="width: 75%; margin: auto;">
            <canvas id="pointsPieChart_{{ sanitized_team_name }}"></canvas>
        </div>
        <div id="barChartContainer_{{ sanitized_team_name }}" style="display: none; margin-top: 20px;">
            <h3 id="barChartTitle_{{ sanitized_team_name }}" style="text-align: center;"></h3>
            <canvas id="pointsBarChart_{{ sanitized_team_name }}"></canvas>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const teamGroupedData = {{ players_by_team[team_name].grouped_points_breakdown|tojson }};
            const teamDetailedData = {{ players_by_team[team_name].detailed_points_breakdown|tojson }};

            const pieCtx = document.getElementById('pointsPieChart_{{ sanitized_team_name }}');
            if (pieCtx) {
                const baseColors = [
                    '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#7FDBDA', '#FF9F40',
                    '#FFB3C1', '#A3D9B1', '#A52A2A', '#DEB887', '#5F9EA0', '#7FFF00'
                ];
                const pieChart = new Chart(pieCtx.getContext('2d'), {
                    type: 'doughnut',
                    data: {
                        labels: Object.keys(teamGroupedData),
                        datasets: [{
                            data: Object.values(teamGroupedData),
                            backgroundColor: baseColors.map(color => transparentize(color, 0.6)),
                            borderColor: baseColors,
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'top',
                                onClick: (e, legendItem, legend) => {
                                    const index = legend.chart.data.labels.indexOf(legendItem.text);
                                    const color = legend.chart.data.datasets[0].borderColor[index];
                                    updateTeamBarChart(legendItem.text, color, '{{ sanitized_team_name }}');
                                }
                            },
                            title: {
                                display: true,
                                text: 'Aggregated Points by Category'
                            }
                        },
                        onClick: (evt, elements) => {
                            if (elements.length > 0) {
                                const clickedIndex = elements[0].index;
                                const clickedCategory = pieChart.data.labels[clickedIndex];
                                const color = pieChart.data.datasets[0].borderColor[clickedIndex];
                                updateTeamBarChart(clickedCategory, color, '{{ sanitized_team_name }}');
                            }
                        }
                    }
                });
            }

            const barChartContainer = document.getElementById('barChartContainer_{{ sanitized_team_name }}');
            const barChartTitle = document.getElementById('barChartTitle_{{ sanitized_team_name }}');
            const barCtx = document.getElementById('pointsBarChart_{{ sanitized_team_name }}');
            let barChart;

            function updateTeamBarChart(category, color, teamId) {
                const categoryData = teamDetailedData.filter(d => d.category === category);

                categoryData.sort((a, b) => b.total_points - a.total_points);

                const labels = categoryData.map(d => d.label);
                const data = categoryData.map(d => d.total_points);

                barChartTitle.innerText = `Breakdown for ${category}`;
                barChartContainer.style.display = 'block';

                if (barChart) {
                    barChart.destroy();
                }

                if (barCtx) {
                    barChart = new Chart(barCtx.getContext('2d'), {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'Points',
                                data: data,
                                backgroundColor: transparentize(color, 0.5),
                                borderColor: color,
                                borderWidth: 2,
                                borderRadius: 5,
                                borderSkipped: false,
                            }]
                        },
                        options: {
                            responsive: true,
                            plugins: {
                                legend: {
                                    display: false
                                }
                            }
                        }
                    });
                }
            }
        });
    </script>

    <div class="sub-section-title">Starters</div>
    {% for player in team_data.players if player.slot_position != 'BE' %}
        <div class="player-breakdown">
            <div class="player-info">
                <div class="player-details-line">
                    <img src="logo_svg/{{ player.pro_team }}.svg" class="nfl-logo player-info-nfl-logo" />
                    <!--
                    <div class="player-headshot"><img loading="lazy" height="35px" width="48px" alt="{{ player.name }}" src="https://a.espncdn.com/combiner/i?img=/i/headshots/nfl/players/full/{{ player.id }}.png&amp;w=96&amp;h=70&amp;cb=1"></div>
                    -->
                    <strong>{{ player.name }}</strong> ({{ player.position }})
                </div>
                <div class="player-total-points">
                    <span class="actual-points">{{ player.points|format_score }}</span> / <span class="projected-points">{{ player.projected_points|format_score }}</span>
                </div>
            </div>
            <div class="stats-table-container">
                <table class="data-table stats-breakdown-table">
                    <thead>
                        <tr>
                            <th></th>
                            {% for header in player.stats_table.headers %}
                                <th title="{{ header.label }}" tabindex="0">{{ header.abbr }}</th>
                            {% endfor %}
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>Actual</td>
                            {% for cell in player.stats_table.actual %}
                                <td class="{{ cell.style }}">{{ cell.value|format_score }}</td>
                            {% endfor %}
                        </tr>
                        <tr>
                            <td>Projected</td>
                            {% for cell in player.stats_table.projected %}
                                <td class="{{ cell.style }}">{{ cell.value|format_score }}</td>
                            {% endfor %}
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    {% else %}
        <p>No starters found for this team.</p>
    {% endfor %}

    <div class="sub-section-title" style="margin-top: 2em;">Bench</div>
    {% for player in team_data.players if player.slot_position == 'BE' %}
        <div class="player-breakdown">
            <div class="player-info">
                <div class="player-details-line">
                    <img src="logo_svg/{{ player.pro_team }}.svg" class="nfl-logo player-info-nfl-logo" />
                    <!--
                    <div class="player-headshot"><img height="35px" width="48px" alt="{{ player.name }}" src="https://a.espncdn.com/combiner/i?img=/i/headshots/nfl/players/full/{{ player.id }}.png&amp;w=96&amp;h=70&amp;cb=1"></div>
                    -->
                    <strong>{{ player.name }}</strong> ({{ player.position }})
                </div>
                <div class="player-total-points">
                    <span class="actual-points">{{ player.points|format_score }}</span> / <span class="projected-points">{{ player.projected_points|format_score }}</span>
                </div>
            </div>
            <div class="stats-table-container">
                <table class="data-table stats-breakdown-table">
                    <thead>
                        <tr>
                            <th></th>
                            {% for header in player.stats_table.headers %}
                                <th title="{{ header.label }}" tabindex="0">{{ header.abbr }}</th>
                            {% endfor %}
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>Actual</td>
                            {% for cell in player.stats_table.actual %}
                                <td class="{{ cell.style }}">{{ cell.value|format_score }}</td>
                            {% endfor %}
                        </tr>
                        <tr>
                            <td>Projected</td>
                            {% for cell in player.stats_table.projected %}
                                <td class="{{ cell.style }}">{{ cell.value|format_score }}</td>
                            {% endfor %}
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    {% else %}
        <p>No bench players found for this team.</p>
    {% endfor %}
    {% endfor %}
</div>
{% endblock %}
